# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Template1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import QDialog, QWidget, QMainWindow
import  glo
glo._init()
from Dialog import Ui_Dialog
import resource_Dialog

from demo_lstm import LSTM
from demo_HMM import HMM
from demo_MEMM import MEMM

def sentence_process(sentence):
    a=''
    for index,i in enumerate(sentence):
        a=a+i+'\n'
    return a

'''创建线程类'''
class Worker(QThread):
    sinOut = pyqtSignal(str) # 自定义信号与类型，执行run()函数时，从相关线程发射此信号

    def __init__(self,window_handle,pushButton,input_text,output_text,parent=None):
        super(Worker, self).__init__(parent)
        self.working = True
        self.window_handle=window_handle
        self.pushButton=pushButton
        self.input_text=input_text
        self.output_text=output_text

    def __del__(self):
        self.working = False
        self.wait()

    '''把那些会造成卡死的事情放进线程'''
    def run(self):
        # while self.working == True:
        global INPUT_TEXT, OUTPUT_TEXT
        screen = QtWidgets.QApplication.primaryScreen()

        screenshot = screen.grabWindow(self.window_handle, x=self.pushButton.x() + 272, y=self.pushButton.y() - 518,
                                       width=525, height=815)
        file_str='./screenshots/{0},{1}.jpg'.format(self.input_text, self.output_text)
        screenshot.save(file_str)
        glo.set_value('INPUT_TEXT', self.input_text)
        glo.set_value('OUTPUT_TEXT', self.output_text)

        # 发出信号
        self.sinOut.emit(file_str)

        # 线程休眠2秒
        # self.sleep(0.5)

class progress_bar_thread(QtCore.QThread):
    #  通过类成员对象定义信号对象
    _signal = pyqtSignal(str)

    def __init__(self):
        super(progress_bar_thread, self).__init__()

    def __del__(self):
        self.wait()

    def run(self):
        for i in range(100):
            time.sleep(0.05)
            self._signal.emit(str(i))  # 注意这里与_signal = pyqtSignal(str)中的类型相同
        self._signal.emit(str(100))

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setEnabled(True)
        Form.resize(1068, 835)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Form.sizePolicy().hasHeightForWidth())
        Form.setSizePolicy(sizePolicy)
        Form.setMinimumSize(QtCore.QSize(1068, 835))
        Form.setMaximumSize(QtCore.QSize(1068, 835))
        palette = QtGui.QPalette()
        Form.setPalette(palette)

        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        Form.setFont(font)

        Form.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon()
        # icon.addPixmap(QtGui.QPixmap("./logo/对联.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("./logo/对联.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        Form.setWindowIcon(icon)
        Form.setWindowOpacity(1.0)
        Form.setToolTip("")
        Form.setStyleSheet("")

        self.form=Form
        self.window_handle=Form.winId()

        self.font = QtGui.QFont()
        self.font.setFamily("方正字迹－曾正国行楷简体")  # 括号里可以设置成自己想要的其它字体
        self.font.setPointSize(36)  # 括号里的数字可以设置成自己想要的字体大小
        self.font.setBold(True)

        self.processed_input_text='我是上联'
        self.processed_output_text='我是下联'


        self.radioButton_state=None
        self.label_5 = QtWidgets.QLabel(Form)
        self.label_5.setGeometry(QtCore.QRect(12, 12, 511, 120))
        self.label_5.setMaximumSize(QtCore.QSize(16777215, 120))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("./logo/title.png"))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setEnabled(False)
        self.textBrowser.setGeometry(QtCore.QRect(20, 720, 461, 61))
        self.textBrowser.setStyleSheet("background-color:rgb(255, 170, 0);\n"
"        border-radius: 25px;  border: 2px groove gray;\n"
"        border-style: inset;")
        self.textBrowser.setObjectName("textBrowser")

        self.line_4 = QtWidgets.QFrame(Form)
        self.line_4.setGeometry(QtCore.QRect(-7, 10, 20, 821))
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.label_6 = QtWidgets.QLabel(Form)
        self.label_6.setEnabled(True)
        self.label_6.setGeometry(QtCore.QRect(520, -10, 551, 171))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMinimumSize(QtCore.QSize(381, 141))
        self.label_6.setMaximumSize(QtCore.QSize(10000, 200))
        self.label_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_6.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_6.setLineWidth(1)
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("./logo/新图网_中国风对联_ixintu.com.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignTop)
        self.label_6.setWordWrap(True)
        self.label_6.setObjectName("label_6")
        self.line_2 = QtWidgets.QFrame(Form)
        self.line_2.setEnabled(True)
        self.line_2.setGeometry(QtCore.QRect(9, 108, 482, 1))
        self.line_2.setMaximumSize(QtCore.QSize(16777215, 1))
        self.line_2.setStyleSheet("")
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.input = QtWidgets.QPlainTextEdit(Form)
        self.input.setEnabled(True)
        self.input.setGeometry(QtCore.QRect(10, 170, 320, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.input.sizePolicy().hasHeightForWidth())
        self.input.setSizePolicy(sizePolicy)
        self.input.setMinimumSize(QtCore.QSize(0, 10))
        self.input.setMaximumSize(QtCore.QSize(16777215, 50))
        self.input.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.input.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.input.setStyleSheet("background-color:rgb(255, 229, 30);\n"
                                 "font: 17pt \"Agency FB\";font-family:\'方正康体简体\';"
                                 "        border-radius:10px;  border: 2px groove gray;\n"
                                 "        border-style: inset;")
        self.input.setReadOnly(False)
        self.input.setObjectName("input")
        self.Button = QtWidgets.QPushButton(Form)
        self.Button.setEnabled(True)
        self.Button.setGeometry(QtCore.QRect(340, 170, 141, 71))
        self.Button.setMaximumSize(QtCore.QSize(200, 100))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)

        self.Button.setPalette(palette)
        self.Button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Button.setMouseTracking(False)
        self.Button.setStatusTip("")
        self.Button.setStyleSheet("background-color:rgb(255, 170, 0);\n"
                                  "font: 14pt \"隶书\";\n"
                                  "        border-radius:10px;  border: 7px groove gray;\n"
                                  "        border-style: outset;")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/background/按钮.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        self.Button.setIcon(icon1)
        self.Button.setIconSize(QtCore.QSize(20, 20))
        self.Button.setAutoRepeat(False)
        self.Button.setAutoRepeatInterval(100)
        self.Button.setObjectName("Button")
        self.Button.clicked.connect(self.on_Button_Clicked)

        self.line_3 = QtWidgets.QFrame(Form)
        self.line_3.setGeometry(QtCore.QRect(485, 108, 20, 721))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line_3.sizePolicy().hasHeightForWidth())
        self.line_3.setSizePolicy(sizePolicy)
        self.line_3.setMaximumSize(QtCore.QSize(100, 16777215))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.line = QtWidgets.QFrame(Form)
        self.line.setEnabled(True)
        self.line.setGeometry(QtCore.QRect(10, 250, 481, 10))
        self.line.setMaximumSize(QtCore.QSize(16777215, 10))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")

        self.textBrowser_2 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 300, 461, 211))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_2.sizePolicy().hasHeightForWidth())
        self.textBrowser_2.setSizePolicy(sizePolicy)
        self.textBrowser_2.setMaximumSize(QtCore.QSize(16777215, 10000))
        self.textBrowser_2.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.textBrowser_2.setAutoFillBackground(False)
        self.textBrowser_2.setStyleSheet("background-color:rgb(255, 229, 30);\n"
                                         "        border-radius: 20px;  border: 2px groove gray;\n"
                                         "        border-style: inset;")

        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(560, 180, 171, 621))
        self.label_3.setMinimumSize(QtCore.QSize(0, 100))
        self.label_3.setMaximumSize(QtCore.QSize(171, 10000))
        self.label_3.setStyleSheet("")
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("./logo/新图网_红色条幅对联_ixintu.com.png"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(850, 180, 171, 621))
        self.label_4.setMinimumSize(QtCore.QSize(0, 100))
        self.label_4.setMaximumSize(QtCore.QSize(171, 10000))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("./logo/新图网_红色条幅对联_ixintu.com.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.Button2 = QtWidgets.QPushButton(Form)
        self.Button2.setEnabled(True)
        self.Button2.setGeometry(QtCore.QRect(20, 530, 171, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Button2.sizePolicy().hasHeightForWidth())

        self.Button2.setSizePolicy(sizePolicy)
        self.Button2.setMaximumSize(QtCore.QSize(10000, 50))
        self.Button2.setSizeIncrement(QtCore.QSize(10000, 10))
        self.Button2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Button2.setStyleSheet("background-color: rgb(0, 255, 255);\n"
                                   "font: 15pt \"华文隶书\";\n"
                                   "        border-radius:20px;  border: 5px groove gray;\n"
                                   "        border-style: outset;")
        self.Button2.clicked.connect(self.on_Button2_clicked)

        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/background/删除.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Button2.setIcon(icon2)
        self.Button2.setObjectName("Button2")

        self.textBrowser_3 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_3.setGeometry(QtCore.QRect(75, 45, 351, 41))
        self.textBrowser_3.setStyleSheet("background:transparent;border-width:0;border-style:outset")
        self.textBrowser_3.setObjectName("textBrowser_3")


        self.line_6 = QtWidgets.QFrame(Form)
        self.line_6.setGeometry(QtCore.QRect(7, 820, 1051, 20))
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.line_7 = QtWidgets.QFrame(Form)
        self.line_7.setGeometry(QtCore.QRect(0, 0, 1061, 20))
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.line_8 = QtWidgets.QFrame(Form)
        self.line_8.setGeometry(QtCore.QRect(520, 10, 20, 821))
        self.line_8.setStyleSheet("")
        self.line_8.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.line_9 = QtWidgets.QFrame(Form)
        self.line_9.setGeometry(QtCore.QRect(1050, 10, 20, 821))
        self.line_9.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")

        self.textBrowser_5 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_5.setGeometry(QtCore.QRect(590, 50, 391, 71))
        self.textBrowser_5.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.textBrowser_5.setStyleSheet("background:transparent;border-width:0;border-style:outset")
        self.textBrowser_5.setOpenLinks(True)
        self.textBrowser_5.setObjectName("textBrowser_5")

        self.listView = QtWidgets.QListView(Form)
        self.listView.setGeometry(QtCore.QRect(0, 0, 1068, 835))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listView.sizePolicy().hasHeightForWidth())
        self.listView.setSizePolicy(sizePolicy)
        self.listView.setMinimumSize(QtCore.QSize(0, 0))
        self.listView.setSizeIncrement(QtCore.QSize(0, 0))
        self.listView.setBaseSize(QtCore.QSize(0, 0))
        self.listView.setStyleSheet("border-image: url(:/background/b2.jpg);")
        self.listView.setObjectName("listView")

        self.input_text='我是上联'
        self.output_text='我是下联'
        self.fontComboBox = QtWidgets.QFontComboBox(Form)
        self.fontComboBox.setGeometry(QtCore.QRect(180, 610, 301, 41))
        self.fontComboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.fontComboBox.setAccessibleName("")
        self.fontComboBox.setStyleSheet("background-color: white;\n"
                                        "        border-radius:10px;  border: 5px groove gray;\n"
                                        "        border-style: outset;")
        self.fontComboBox.setObjectName("fontComboBox")
        self.fontComboBox.activated[str].connect(self.fontcombobox_activated)  # 信号传递为字符串，返回更改内容
        # self.fontComboBox.activated[str].connect(lambda x:self.label_2.setText('<span style=\" font-family:\'{0}\'; font-weight:500;font-size:38pt;letter-spacing:15px\"><p align=\"center\">{1}</span><\p>'.format(x,self.output_text)))  # 信号传递为字符串，返回更改内容
        self.fontComboBox.activated[str].connect(lambda x:self.textBrowser_3.setText('<span style=\" font-family:\'方正康体简体\'; font-weight:400;font-size:16pt;\"><p align=\"center\">字体=>{}</span><\p>'.format(x)))


        '''一键生成按钮'''
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(260, 530, 221, 51))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: rgb(0, 255, 255);\n"
"font: 12pt \"华文隶书\";\n"
"        border-radius:20px;  border: 5px groove gray;\n"
"        border-style: outset;")

        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/background/截图.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon3)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.slotStart)



        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(610, 210, 71, 551))
        self.label.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label.setStyleSheet("letter-spacing:10px")
        self.label.setObjectName("label")
        self.label.setWordWrap(True)


        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(900, 210, 71, 551))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label_2.setWordWrap(True)
        self.label_2.setAlignment(Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label.setWordWrap(True)

        self.radioButton = QtWidgets.QRadioButton(Form)
        self.radioButton.setGeometry(QtCore.QRect(70, 120, 331, 41))
        self.radioButton.setStyleSheet("font:  14pt \"Agency FB\";\n"
"background-color: rgb(255, 155, 177);\n"
"")
        self.radioButton.setObjectName("radioButton")
        self.radioButton.toggled.connect(self.radioButton_clicked)

        self.radioButton_2 = QtWidgets.QRadioButton(Form)
        self.radioButton_2.setGeometry(QtCore.QRect(200, 120, 115, 41))
        self.radioButton_2.setStyleSheet("font: 14pt \"Agency FB\";")
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_2.toggled.connect(self.radioButton_clicked)


        self.radioButton_3 = QtWidgets.QRadioButton(Form)
        self.radioButton_3.setGeometry(QtCore.QRect(340, 120, 115, 41))
        self.radioButton_3.setStyleSheet("font: 14pt \"Agency FB\";")
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_3.toggled.connect(self.radioButton_clicked)

        # self.line_5 = QtWidgets.QFrame(Form)
        # self.line_5.setEnabled(True)
        # self.line_5.setGeometry(QtCore.QRect(10, 140, 481, 10))
        # self.line_5.setMaximumSize(QtCore.QSize(16777215, 10))
        # self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        # self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        # self.line_5.setObjectName("line_5")

        self.comboBox = QtWidgets.QComboBox(Form)
        self.comboBox.setGeometry(QtCore.QRect(11, 220,320, 21))
        self.comboBox.setStyleSheet("background-color: white;\n"
                                    "        border-radius:1px;  border: 2px groove gray;\n"
                                    "        border-style: outset;")
        self.comboBox.setEditable(False)
        self.sentences=['青山不墨千秋画', '两岸凉生菰叶雨', '无边落木萧萧下', '两只黄鹂鸣翠柳','深秋帘幕千家雨', '月透柳帘窥案卷','一二三四五六七']

        self.comboBox.addItems(self.sentences)

        self.comboBox.activated.connect(self.combobox_activated)

        self.label_7 = QtWidgets.QLabel(Form)
        self.label_7.setGeometry(QtCore.QRect(30, 610, 151, 51))
        self.label_7.setStyleSheet("font: 20pt \"华文隶书\";\n"
                                   "")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(Form)
        self.label_8.setGeometry(QtCore.QRect(20, 790, 151, 21))
        self.label_8.setStyleSheet("font: 15pt \"华文隶书\";")
        self.label_8.setObjectName("label_8")

        self.label_9 = QtWidgets.QLabel(Form)
        self.label_9.setGeometry(QtCore.QRect(30, 660, 151, 51))
        self.label_9.setStyleSheet("font: 20pt \"华文隶书\";\n"
"")
        self.label_9.setObjectName("label_9")
        self.horizontalSlider = QtWidgets.QSlider(Form)
        self.horizontalSlider.setGeometry(QtCore.QRect(180, 680, 301, 22))
        self.horizontalSlider.setMinimum(20)
        self.horizontalSlider.setMaximum(40)
        self.horizontalSlider.setSingleStep(10)
        self.horizontalSlider.setPageStep(2)
        self.horizontalSlider.setProperty("value", 36)
        self.horizontalSlider.setSliderPosition(36)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.horizontalSlider.setTickInterval(2)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider.valueChanged.connect(self.horizontalSlider_valueChanged)

        self.label_10 = QtWidgets.QLabel(Form)
        self.label_10.setGeometry(QtCore.QRect(175, 665, 72, 15))
        self.label_10.setStyleSheet("font: 12pt \"华文隶书\";")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(Form)
        self.label_11.setGeometry(QtCore.QRect(465, 665, 72, 15))
        self.label_11.setStyleSheet("font: 12pt \"华文隶书\";")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(Form)
        self.label_12.setGeometry(QtCore.QRect(320, 665, 72, 15))
        self.label_12.setStyleSheet("font: 12pt \"华文隶书\";")
        self.label_12.setObjectName("label_12")

        self.progressBar = QtWidgets.QProgressBar(Form)
        self.progressBar.setGeometry(QtCore.QRect(20, 270, 481, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")


        self.listView.raise_()
        self.label_5.raise_()
        self.label_3.raise_()
        self.label_6.raise_()
        self.line_2.raise_()
        self.input.raise_()
        self.Button.raise_()
        self.line.raise_()
        self.textBrowser_2.raise_()
        self.label_4.raise_()
        self.Button2.raise_()
        self.textBrowser.raise_()
        # self.progressBar.raise_()
        self.line_4.raise_()
        self.textBrowser_3.raise_()
        self.line_6.raise_()
        self.line_7.raise_()
        self.line_8.raise_()
        self.line_9.raise_()
        self.textBrowser_5.raise_()
        self.line_3.raise_()
        self.pushButton.raise_()
        self.fontComboBox.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.radioButton.raise_()
        self.radioButton_2.raise_()
        self.radioButton_3.raise_()
        self.progressBar.raise_()
        self.comboBox.raise_()
        self.label_7.raise_()
        self.label_8.raise_()
        self.label_9.raise_()
        self.horizontalSlider.raise_()
        self.label_10.raise_()
        self.label_11.raise_()
        self.label_12.raise_()

        self.retranslateUi(Form)
        # QtCore.QMetaObject.connectSlotsByName(Form)


    def radioButton_clicked(self):
        print('按钮按下！')
        if self.radioButton.isChecked():
            self.radioButton_state = self.radioButton.text()
            self.textBrowser_3.setText('<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">使用HMM方式生成！</span><\p>')
            print(self.radioButton_state)
        elif self.radioButton_2.isChecked():
            self.radioButton_state = self.radioButton_2.text()
            self.textBrowser_3.setText('<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">使用MEMM方式生成！</span><\p>')
            print(self.radioButton_state)
        elif self.radioButton_3.isChecked():
            self.radioButton_state =self.radioButton_3.text()
            self.textBrowser_3.setText('<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">使用LSTM方式生成！</span><\p>')
            print(self.radioButton_state)


    def on_Button_Clicked(self):
        '''对联生成按钮'''
        self.textBrowser_3.setText(
            '<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">生成成功！</span><\p>')    #这句话的位置与作用有待商榷
        if self.input.toPlainText()=='':
            self.textBrowser_3.setText(
                '<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:17pt;\"><p align=\"center\">AI:我太nan了...</span><\p>')  # 这句话的位置与作用有待商榷
            return
        else:
            self.input_text = self.input.toPlainText()
        if self.input_text not in self.sentences:
            self.sentences.append(self.input_text)
            self.comboBox.addItem(self.input_text)

        # self.sentences=list(set(self.sentences))

        input_text_list = [self.input_text]
        self.processed_input_text=sentence_process(self.input_text)

        self.radioButton_state=self.radioButton.text() if self.radioButton.isChecked() else ''+\
                               self.radioButton_2.text() if self.radioButton_2.isChecked() else ''+\
                               self.radioButton_3.text() if self.radioButton_3.isChecked() else ''
        # print(self.radioButton_state)
        # print(input_text_list)

        if self.radioButton_state == 'HMM':
            self.output = HMM(input_text_list)
        elif self.radioButton_state == 'MEMM':
            self.output = MEMM(input_text_list)
        elif self.radioButton_state == 'LSTM':
            self.output = LSTM(input_text_list)
        else:
            self.textBrowser_3.setText('<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">下面有框呢↓！</span><\p>')
            return
        #
        self.output_text=self.output
        self.processed_output_text=sentence_process(self.output)

        textCursor = self.textBrowser_2.textCursor()
        endofline_pos = textCursor.EndOfLine  # 行末
        self.textBrowser_2.append('上联：')
        textCursor.movePosition(endofline_pos)
        self.textBrowser_2.append(self.input_text)
        textCursor.movePosition(endofline_pos)
        self.textBrowser_2.append('下联：')
        textCursor.movePosition(endofline_pos)
        self.textBrowser_2.append(self.output)
        textCursor.movePosition(endofline_pos)
        self.textBrowser_2.append('')
        textCursor.movePosition(endofline_pos)

        self.textBrowser_5.setText('<span style=\" font-family:\'博洋柳体\'; font-weight:500;font-size:32pt;\"><p align=\"center\">{0}</span><\p>'.format('AI给您对对联'))
        self.label.setText('<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(self.font.family(),self.font.pointSize(),self.processed_input_text))
        self.label_2.setText('<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(self.font.family(),self.font.pointSize(),self.processed_output_text))
        # self.label_2.setText('<p align=\"center\"><span style=\" font-size:32pt;\">{}</span></p>'.format(self.processed_input_text))
        self.radioButton_state=None



    def on_Button2_clicked(self):
        self.textBrowser_2.clear()
        self.label.clear()
        self.label_2.clear()
        self.textBrowser_3.setText(
            '<span style=\" font-family:\'AR TianniuB5 Ultra\'; font-weight:400;font-size:18pt;\"><p align=\"center\">框框已清空！</span><\p>')

    def combobox_activated(self):
        # print('使用下拉框输入!')
        self.input.clear()
        self.input.appendPlainText(self.comboBox.currentText())

    def slotStart(self):
        self.thread = Worker(self.window_handle,self.pushButton,self.input_text,self.output_text)
        self.thread.start()
        # self.child_window()
        self.thread.sinOut.connect(self.child_window)

        # self.btnStart.setEnabled(False)

    def child_window(self,str):
        dialog=QDialog()
        child = Ui_Dialog()
        child.setupUi(dialog,str)
        dialog.show()
        dialog.exec_()  # 阻塞显示，只有关闭子窗口才能返回父窗口

    def fontcombobox_activated(self,font):
        self.font.setFamily(font)
        self.label.setText(
            '<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(
                font,self.font.pointSize(), self.processed_input_text))
        self.label_2.setText(
            '<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(
                font,self.font.pointSize(), self.processed_output_text))

    def horizontalSlider_valueChanged(self,value):
        self.font.setPointSize(value)
        # self.label.setFont(QFont(self.font.family(),value))
        # self.label_2.setFont(QFont(self.font.family(),value))
        self.label.setText(
            '<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(self.font.family(),value,self.processed_input_text))
        self.label_2.setText(
            '<span style=\" font-family:\'{0}\'; font-weight:500;font-size:{1}pt;line-height:50%\"><p align=\"center\">{2}</span><\p>'.format(self.font.family(),value,self.processed_output_text))

        self.textBrowser_3.setText(
            '<span style=\" font-family:\'方正康体简体\'; font-weight:400;font-size:16pt;\"><p align=\"center\">字号=>{}号</span><\p>'.format(self.font.pointSize()))


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "对联生成器"))
        self.textBrowser.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600; color:#000000;\"> 031950116张仲彬      031950119张  挺</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600; color:#000000;\"> 031950117金航柱      031950129杨易辉</span></p></body></html>"))
        self.input.setPlaceholderText(_translate("Form", "请输入上联："))
        self.Button.setWhatsThis(_translate("Form", "<html><head/><body><p>这是生成下联按钮</p></body></html>"))
        self.Button.setText(_translate("Form", "生成对联"))
        self.textBrowser_2.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.Button2.setText(_translate("Form", "清空对联"))
        self.textBrowser_3.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'苏新诗卵石体\'; font-size:9pt; font-weight:500; font-style:normal;\">\n"
                                              "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:18pt;\">对联生成系统</span></p></body></html>"))
        self.textBrowser_5.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'博洋柳体\'; font-size:14pt; font-weight:500; font-style:normal;\">\n"
                                              "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt;\">我是横批</span></p></body></html>"))
        self.pushButton.setText(_translate("Form", "一键生成对联截图"))


        self.label.setText(_translate("Form",
                                      "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt;\">我</span></p><p align=\"center\"><span style=\" font-size:36pt;\">是</span></p><p align=\"center\"><span style=\" font-size:36pt;\">上</span></p><p align=\"center\"><span style=\" font-size:36pt;\">联</span></p></body></html>"))
        self.label_2.setText(_translate("Form",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt;\">我</span></p><p align=\"center\"><span style=\" font-size:36pt;\">是</span></p><p align=\"center\"><span style=\" font-size:36pt;\">下</span></p><p align=\"center\"><span style=\" font-size:36pt;\">联</span></p></body></html>"))
        self.radioButton.setText(_translate("Form", "HMM"))
        self.radioButton_2.setText(_translate("Form", "MEMM"))
        self.radioButton_3.setText(_translate("Form", "LSTM"))
        self.comboBox.setItemText(0, _translate("Form", "青山不墨千秋画", "111"))
        self.comboBox.setItemText(1, _translate("Form", "两岸凉生菰叶雨"))
        self.comboBox.setItemText(2, _translate("Form", "无边落木萧萧下"))
        self.comboBox.setItemText(3, _translate("Form", "两只黄鹂鸣翠柳"))
        self.comboBox.setItemText(4, _translate("Form", "深秋帘幕千家雨"))
        self.comboBox.setItemText(5, _translate("Form", "月透柳帘窥案卷"))
        self.comboBox.setItemText(6, _translate("Form", "一二三四五六七"))
        self.comboBox.setItemText(7, _translate("Form", ""))
        self.comboBox.setItemText(8, _translate("Form", ""))
        self.comboBox.setItemText(9, _translate("Form", ""))
        self.label_7.setText(_translate("Form", "<html><head/><body><p><span style=\" color:#ffaa7f;\">字体设置</span></p></body></html>"))
        self.label_8.setText(_translate("Form", "<html><head/><body><p><span style=\" color:#550000;\">@ 版权所有</span></p></body></html>"))
        self.label_9.setText(_translate("Form", "<html><head/><body><p><span style=\" color:#ffaa7f;\">字号设置</span></p></body></html>"))
        self.label_10.setText(_translate("Form", "20"))
        self.label_11.setText(_translate("Form", "40"))
        self.label_12.setText(_translate("Form", "30"))


